{"version":3,"sources":["utils/formatBalance.ts","components/Balance.tsx","components/Layout/Flex.tsx","utils/farmHelpers.ts","utils/latinise.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","components/Select/Select.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","components/TokenImage/index.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useContract.ts","hooks/useApproveFarm.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","hooks/useCallWithGasPrice.ts","utils/calls/farms.ts","hooks/useUnstakeFarms.ts","hooks/useStakeFarms.ts","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","utils/compoundApyHelpers.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","hooks/useHarvestFarm.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useDelayedUnmount.ts","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/types.ts","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx"],"names":["getBalanceAmount","amount","decimals","BigNumber","dividedBy","BIG_TEN","pow","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","undefined","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatLocalisedCompactNumber","codeFromStorage","getLanguageCodeFromLS","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","Balance","value","color","isDisabled","unit","prefix","onClick","props","previousValue","useRef","useEffect","current","start","end","suffix","duration","separator","FlexLayout","styled","div","isArchivedPid","pid","Latinise","latin_map","τ","Τ","latinise","input","replace","x","Outer","Box","theme","background","colors","gradients","bubblegum","Inner","Container","PageHeader","children","StyledInput","Input","InputWrapper","mediaQueries","sm","SearchInput","onChangeCallback","onChange","placeholder","useState","searchText","setSearchText","t","useTranslation","debouncedOnChange","useMemo","debounce","e","target","DropDownHeader","shadows","inset","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","onOptionChange","defaultOptionIndex","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","event","stopPropagation","handleClickOutside","document","addEventListener","removeEventListener","label","ref","map","option","index","selectedIndex","Wrapper","primary","ExpandableSectionButton","expanded","role","bold","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","justifyContent","width","height","href","symbol","getImageUrlFromToken","token","TokenPairImage","primaryToken","secondaryToken","isTokenOnly","src","primarySrc","secondarySrc","Flex","MultiplierTag","Tag","CardHeading","multiplier","quoteToken","alignItems","mb","variant","flexDirection","split","ml","useERC20","address","library","useActiveWeb3React","getBep20Contract","getSigner","useMasterchef","getMasterchefContract","EditingCurrency","CalculatorMode","useApproveFarm","lpContract","masterChefContract","gasPrice","useGasPrice","callWithGasPrice","useCallback","contract","methodName","methodArgs","overrides","contractMethod","get","hasManualGasPriceOverride","tx","useCallWithGasPrice","onApprove","constants","MaxUint256","wait","receipt","status","gasLimit","DEFAULT_GAS_LIMIT","stakeFarm","times","DEFAULT_TOKEN_DECIMAL","toString","validAddress","startsWith","length","deposit","unstakeFarm","withdraw","harvestFarm","useUnstakeFarms","handleUnstake","onUnstake","useStakeFarms","handleStake","txHash","console","info","onStake","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","React","Children","toArray","child","i","StyledTokenInput","isWarning","warning","text","xs","ModalInput","max","onSelectMax","inputTitle","isBalanceZero","style","position","marginBottom","pl","fontSize","balanceUnits","parseUnits","displayBalance","pattern","inputMode","step","min","scale","mr","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","apr","earningTokenPrice","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","roundingDecimalsNew","Math","round","days","daysAsDecimalOfYear","principal","interestEarned","parseFloat","getApy","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","Footer","BulletList","textSubtle","RoiCalculatorFooter","isFarm","displayApr","autoCompoundFrequency","linkLabel","linkHref","isExpanded","setIsExpanded","useTooltip","my","placement","tooltipOffset","multiplierRef","targetRef","multiplierTooltip","multiplierTooltipVisible","tooltipVisible","gridRowCount","apy","p","prev","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","display","mt","fee","compoundingIndexToFrequency","initialState","controls","compounding","compoundingFrequency","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","data","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","state","action","type","payload","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","stakingTokenPrice","useReducer","dispatch","principalInUSDAsNumber","interestBreakdown","hasInterest","Number","isNaN","roiAsUSD","principalForExpectedRoi","interest","getPrincipalForInterest","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","gt","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","default","RoiCardInner","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","expectedRoi","setExpectedRoi","inputRef","focus","onEnterEditing","textTransform","currentTarget","validity","valid","roiAsString","rotate","keyframes","ArrowContainer","AnimatedArrow","key","setKey","prevKey","prevId","parseInt","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenBalance","stakingTokenSymbol","initialValue","account","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","onUserInput","title","headerBackground","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","AnnualRoiContainer","AnnualRoiDisplay","DepositModal","stakedBalance","onConfirm","tokenName","lpPrice","cakePrice","referral","val","setVal","valAddress","setValAddress","useToast","toastSuccess","toastError","pendingTx","setPendingTx","showRoiCalculator","setShowRoiCalculator","fullBalance","lpTokensToStake","fullBalanceNumber","usdToStake","annualRoi","formattedAnnualRoi","handleChange","handleChangeAddress","handleSelectMax","plus","isFinite","eq","error","alignSelf","WithdrawModal","valNumber","IconButtonWrapper","StakeAction","tokenBalance","location","useLocation","useAppDispatch","useWeb3React","useLpTokenPrice","fetchFarmUserDataAsync","pids","stakedBalanceBigNumber","lt","ROUND_DOWN","useModal","onPresentDeposit","onPresentWithdraw","some","item","pathname","includes","useHarvestFarm","farmPid","onReward","HarvestAction","earnings","usePriceMariachiDoge","rawEarningsBalance","BIG_ZERO","earningsBusd","multipliedBy","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","lpAddress","getAddress","isApproved","handleApprove","pr","lpSymbol","ConnectWalletButton","ApyLabelContainer","ApyButton","useFarmUser","onPresentApyModal","StyledCard","Card","FarmCardInnerContainer","ExpandingWrapper","cardBorder","FarmCard","showExpandableSection","setShowExpandableSection","liquidity","isGreaterThanOrEqualTo","toUpperCase","isPromotedFarm","tokenSymbol","isActive","quoteTokenSymbol","CardActionsContainer","getBscScanLink","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","AprWrapper","Apr","originalValue","hideButton","TokenWrapper","Farm","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isDesktop","useMatchBreakpoints","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","ActionContent","earningsBigNumber","isZero","Staked","groupInfo","marginTop","expandAnimation","collapseAnimation","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","bsc","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isMobile","isSmallerScreen","tableSchema","columnNames","column","Object","keys","columnIndex","indexOf","createElement","handleRenderRow","colSpan","card","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","hasStakeInFinishedFarms","url","useRouteMatch","as","Link","to","show","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","Image","getDisplayApr","cakeRewardsApr","Farms","path","farmsLP","useFarms","dogePrice","usePriceDogeUSDC","query","setQuery","viewMode","ViewMode","TABLE","sortOption","setSortOption","fastRefresh","useRefresh","isArchived","isInactive","useUserFarmStakedOnly","stakedOnly","setStakedOnly","activeFarms","filter","inactiveFarms","archivedFarms","stakedOnlyFarms","isGreaterThan","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","totalValue","cakeRewardPerYear","mariachiPerBlock","poolWeight","BLOCKS_PER_YEAR","tokenAmount","lpTotalInQuoteToken","QuoteToken","DOGE","MARIACHI","externalPid","valuePerLp","lpInMaster","lpInVamp","comparedTo","lowercaseQuery","chosenFarmsMemoized","chosenFarms","farms","orderBy","slice","sortFarms","rowData","tokenAddresses","quoteTokenAdresses","tokenAddress","quoteTokenAddress","Page","marginLeft","sort","a","b","exact","renderContent","alt"],"mappings":"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","file":"static/js/5.31d36720.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from 'uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from 'uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from 'uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from 'uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  ...props\n}) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded = false }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\nexport default ExpandableSectionButton\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton } from 'uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && addLiquidityUrl && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from 'uikit'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: string\n  secondaryToken: string\n  isTokenOnly: boolean\n}\n\nconst getImageUrlFromToken = (token: string) => {\n  return `/images/tokens/${token}.png`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({\n  primaryToken,\n  secondaryToken,\n  isTokenOnly,\n  ...props\n}) => {\n  return isTokenOnly ? (\n    <UIKitTokenImage src={getImageUrlFromToken(primaryToken)} {...props} />\n  ) : (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: string\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Skeleton } from 'uikit'\nimport { TokenPairImage } from 'components/TokenImage'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  token: string\n  quoteToken: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, token, quoteToken }) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <TokenPairImage\n        variant=\"inverted\"\n        primaryToken={token}\n        secondaryToken={quoteToken}\n        isTokenOnly={false}\n        width={64}\n        height={64}\n      />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {multiplier ? (\n            <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n          ) : (\n            <Skeleton ml=\"4px\" width={42} height={28} />\n          )}\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBep20Contract, getCakeContract, getMasterchefContract, getCakeVaultContract } from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import { useCallback } from 'react'\nimport { ethers, Contract } from 'ethers'\nimport { useMasterchef } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\nconst useApproveFarm = (lpContract: Contract) => {\n  const masterChefContract = useMasterchef()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const handleApprove = useCallback(async () => {\n    const tx = await callWithGasPrice(lpContract, 'approve', [masterChefContract.address, ethers.constants.MaxUint256])\n    const receipt = await tx.wait()\n    return receipt.status\n  }, [lpContract, masterChefContract, callWithGasPrice])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveFarm\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: +amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount, address) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  let validAddress = address\n  if (address === '' || !address.startsWith('0x') || address.length < 42) {\n    validAddress = '0x0000000000000000000000000000000000000000'\n  }\n  const tx = await masterChefContract.deposit(pid, value, validAddress, { ...options })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const tx = await masterChefContract.withdraw(pid, value, { ...options })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const tx = await masterChefContract.deposit(pid, '0', '0x0000000000000000000000000000000000000000', { ...options })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import { useCallback } from 'react'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useUnstakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await unstakeFarm(masterChefContract, pid, amount)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakeFarms\n","import { useCallback } from 'react'\nimport { stakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useStakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string, address: string) => {\n      const txHash = await stakeFarm(masterChefContract, pid, amount, address)\n      console.info(txHash)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakeFarms\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Spacer from './Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { formatBigNumber } from 'utils/formatBalance'\n\ninterface ModalInputProps {\n  max?: string\n  symbol?: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  border: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n\n    const balanceUnits = parseUnits(balance, decimals)\n    return formatBigNumber(balanceUnits, decimals, decimals)\n  }\n\n  return (\n    <div style={{ position: 'relative', marginBottom: '10px' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          {max && <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>}\n        </Flex>\n        {max ? (\n          <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n            <StyledInput\n              pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n              inputMode=\"decimal\"\n              step=\"any\"\n              min=\"0\"\n              onChange={onChange}\n              placeholder=\"0\"\n              value={value}\n            />\n            <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n              {t('Max')}\n            </Button>\n            <Text fontSize=\"16px\">{symbol}</Text>\n          </Flex>\n        ) : (\n          <StyledInput inputMode=\"text\" onChange={onChange} placeholder=\"\" value={value} />\n        )}\n      </StyledTokenInput>\n    </div>\n  )\n}\n\nexport default ModalInput\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of MARIACHI rewards each farm receives, as a proportion of the MARIACHI produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 MARIACHI per block, a 40x farm would receive 40 MARIACHI per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (MARIACHI yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const [expectedRoi, setExpectedRoi] = useState('')\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n    setExpectedRoi(\n      roiUSD.toLocaleString('en', {\n        minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n        maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n      }),\n    )\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.validity.valid) {\n      const roiAsString = event.target.value.replace(/,/g, '.')\n      setTargetRoi(roiAsString)\n      setExpectedRoi(roiAsString)\n    }\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"^[0-9]+[.,]?[0-9]*$\"\n                  scale=\"sm\"\n                  value={expectedRoi}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from 'uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from 'uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'MARIACHI',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Button, Modal, LinkExternal, CalculateIcon, IconButton } from 'uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, formatNumber } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\ninterface DepositModalProps {\n  max: BigNumber\n  stakedBalance: BigNumber\n  multiplier?: string\n  lpPrice: BigNumber\n  lpLabel?: string\n  onConfirm: (amount: string, address: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n  isTokenOnly?: boolean\n  cakePrice?: BigNumber\n  referral?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  stakedBalance,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  multiplier,\n  displayApr,\n  lpPrice,\n  lpLabel,\n  apr,\n  addLiquidityUrl,\n  isTokenOnly,\n  cakePrice,\n  referral,\n}) => {\n  const [val, setVal] = useState('')\n  const [valAddress, setValAddress] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const lpTokensToStake = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const usdToStake = lpTokensToStake.times(lpPrice)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !lpTokensToStake.isNaN() ? usdToStake.toNumber() : 0,\n    apr,\n    earningTokenPrice: cakePrice.toNumber(),\n  })\n\n  const annualRoi = cakePrice.times(interestBreakdown[3])\n  const formattedAnnualRoi = formatNumber(\n    annualRoi.toNumber(),\n    annualRoi.gt(10000) ? 0 : 2,\n    annualRoi.gt(10000) ? 0 : 2,\n  )\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleChangeAddress = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget) {\n        setValAddress(e.currentTarget.value)\n      }\n    },\n    [setValAddress],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n        stakingTokenBalance={stakedBalance.plus(max)}\n        stakingTokenSymbol={tokenName}\n        stakingTokenPrice={lpPrice.toNumber()}\n        earningTokenPrice={cakePrice.toNumber()}\n        apr={apr}\n        multiplier={multiplier}\n        displayApr={displayApr}\n        linkHref={addLiquidityUrl}\n        isFarm\n        initialValue={val}\n        onBack={() => setShowRoiCalculator(false)}\n      />\n    )\n  }\n\n  return (\n    <Modal title=\"Stake Tokens\" onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={!isTokenOnly ? addLiquidityUrl : null}\n        inputTitle={t('Stake')}\n      />\n      <ModalInput value={valAddress} onChange={handleChangeAddress} inputTitle=\"Dog Fight Address (Optional)\" />\n      <Text fontSize=\"16px\">In this field you can change your referral address.</Text>\n      <Text fontSize=\"16px\">It will receive an extra 1% of your yield each harvest.</Text>\n      <Text fontSize=\"16px\">{`${\n        referral !== '0x0000000000000000000000000000000000000000' ? `Your current referral address is ${referral}` : ``\n      } `}</Text>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Text mr=\"8px\" color=\"textSubtle\">\n          {t('Annual ROI at current rates')}:\n        </Text>\n        <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n          <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </AnnualRoiContainer>\n      </Flex>\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={\n            pendingTx || !lpTokensToStake.isFinite() || lpTokensToStake.eq(0) || lpTokensToStake.gt(fullBalanceNumber)\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val, valAddress)\n              toastSuccess(t('Staked!'), t('Your funds have been staked in the farm'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      {!isTokenOnly && (\n        <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n          {t('Get %symbol%', { symbol: tokenName })}\n        </LinkExternal>\n      )}\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from 'uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/hooks'\nimport { getBalanceAmount, getBalanceNumber } from 'utils/formatBalance'\nimport useUnstakeFarms from 'hooks/useUnstakeFarms'\nimport useStakeFarms from 'hooks/useStakeFarms'\nimport { useAppDispatch } from 'state'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  multiplier?: string\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  lpLabel?: string\n  isTokenOnly?: boolean\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  multiplier,\n  apr,\n  displayApr,\n  addLiquidityUrl,\n  cakePrice,\n  lpLabel,\n  isTokenOnly,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string, address: string) => {\n    await onStake(amount, address)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return '<0.0000001'\n    }\n    if (stakedBalanceBigNumber.gt(0)) {\n      return stakedBalanceBigNumber.toFixed(8, BigNumber.ROUND_DOWN)\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      multiplier={multiplier}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n      isTokenOnly={isTokenOnly}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={(stakedBalance as BigNumber).eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            decimals={2}\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n        )}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { harvestFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useHarvestFarm = (farmPid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    await harvestFarm(masterChefContract, farmPid)\n  }, [farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport useToast from 'hooks/useToast'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePriceMariachiDoge } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport useHarvestFarm from 'hooks/useHarvestFarm'\nimport { useAppDispatch } from 'state'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const cakePrice = usePriceMariachiDoge()\n  const dispatch = useAppDispatch()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          try {\n            await onReward()\n            toastSuccess(\n              `${t('Harvested')}!`,\n              t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'MARIACHI' }),\n            )\n          } catch (e) {\n            toastError(\n              t('Error'),\n              t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n            )\n            console.error(e)\n          } finally {\n            setPendingTx(false)\n          }\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n        }}\n      >\n        {pendingTx ? t('Harvesting') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Text } from 'uikit'\nimport useApproveFarm from 'hooks/useApproveFarm'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { useERC20 } from 'hooks/useContract'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  lpLabel?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, cakePrice, lpLabel }) => {\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const { allowance, tokenBalance, stakedBalance, earnings } = farm.userData || {}\n  const lpAddress = getAddress(lpAddresses)\n  const isApproved = account && allowance && parseInt(allowance.toString()) > 0\n  const dispatch = useAppDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      console.error(e)\n    } finally {\n      setRequestedApproval(false)\n    }\n  }, [onApprove, dispatch, account, pid, t, toastError])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        apr={farm.apr}\n        lpLabel={lpLabel}\n        cakePrice={cakePrice}\n        addLiquidityUrl={addLiquidityUrl}\n        isTokenOnly={farm.isTokenOnly}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          MARIACHI\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {farm.lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Flex, IconButton, useModal, CalculateIcon } from 'uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFarmUser, useLpTokenPrice } from 'state/hooks'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nexport interface ApyButtonProps {\n  variant: 'text' | 'text-and-button'\n  pid: number\n  lpSymbol: string\n  lpLabel?: string\n  multiplier: string\n  cakePrice?: BigNumber\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  variant,\n  pid,\n  lpLabel,\n  lpSymbol,\n  cakePrice,\n  apr,\n  multiplier,\n  displayApr,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const { tokenBalance, stakedBalance } = useFarmUser(pid)\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      stakingTokenBalance={stakedBalance.plus(tokenBalance)}\n      stakingTokenSymbol={lpSymbol}\n      stakingTokenPrice={parseFloat(lpPrice.toString())}\n      earningTokenPrice={parseFloat(cakePrice.toString())}\n      apr={apr}\n      multiplier={multiplier}\n      displayApr={displayApr}\n      linkHref={addLiquidityUrl}\n      isFarm\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <ApyLabelContainer alignItems=\"center\" onClick={handleClickButton}>\n      {displayApr}%\n      {variant === 'text-and-button' && (\n        <IconButton variant=\"text\" scale=\"sm\" ml=\"4px\">\n          <CalculateIcon width=\"18px\" />\n        </IconButton>\n      )}\n    </ApyLabelContainer>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Card, Flex, Text, Skeleton } from 'uikit'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { Farm } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  liquidity?: BigNumber\n}\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.isGreaterThanOrEqualTo(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.tokenSymbol === 'CAKE'\n\n  return (\n    <StyledCard isActive={isPromotedFarm}>\n      <FarmCardInnerContainer>\n        <CardHeading\n          lpLabel={lpLabel}\n          multiplier={farm.multiplier}\n          token={farm.tokenSymbol}\n          quoteToken={farm.quoteTokenSymbol}\n        />\n        {!removed && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text>{t('APR')}:</Text>\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n              {farm.apr ? (\n                <ApyButton\n                  variant=\"text-and-button\"\n                  pid={farm.pid}\n                  lpSymbol={farm.lpSymbol}\n                  multiplier={farm.multiplier}\n                  lpLabel={lpLabel}\n                  cakePrice={cakePrice}\n                  apr={farm.apr}\n                  displayApr={displayApr}\n                />\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Earn')}:</Text>\n          <Text bold>MARIACHI</Text>\n        </Flex>\n        <CardActionsContainer farm={farm} lpLabel={lpLabel} account={account} cakePrice={cakePrice} />\n      </FarmCardInnerContainer>\n\n      <ExpandingWrapper>\n        <ExpandableSectionButton\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\n          expanded={showExpandableSection}\n        />\n        {showExpandableSection && (\n          <DetailsSection\n            removed={removed}\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\n            totalValueFormatted={totalValueFormatted}\n            lpLabel={lpLabel}\n          />\n        )}\n      </ExpandingWrapper>\n    </StyledCard>\n  )\n}\n\nexport default FarmCard\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport BigNumber from 'bignumber.js'\nimport { Skeleton } from 'uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  pid: number\n  lpLabel: string\n  lpSymbol: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  pid,\n  lpLabel,\n  lpSymbol,\n  multiplier,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <ApyButton\n          variant={hideButton ? 'text' : 'text-and-button'}\n          pid={pid}\n          lpSymbol={lpSymbol}\n          lpLabel={lpLabel}\n          multiplier={multiplier}\n          cakePrice={cakePrice}\n          apr={originalValue}\n          displayApr={value}\n        />\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from 'uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { TokenPairImage } from 'components/TokenImage'\nimport { useFarmUser } from 'state/hooks'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: string\n  quoteToken: string\n  isTokenOnly: boolean\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid, isTokenOnly }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage\n          variant=\"inverted\"\n          primaryToken={token}\n          secondaryToken={quoteToken}\n          isTokenOnly={isTokenOnly}\n          width={40}\n          height={40}\n        />\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from 'uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isDesktop } = useMatchBreakpoints()\n\n  return (\n    <Container>\n      {!isDesktop && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of MARIACHI rewards each farm receives, as a proportion of the MARIACHI produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 MARIACHI per block, a 40x farm would receive 40 MARIACHI per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Skeleton } from 'uikit'\nimport BigNumber from 'bignumber.js'\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.isGreaterThanOrEqualTo(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useState } from 'react'\nimport { Button, Heading, Skeleton, Text } from 'uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceMariachiDoge } from 'state/hooks'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport useHarvestFarm from 'hooks/useHarvestFarm'\nimport { useAppDispatch } from 'state'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const { toastSuccess, toastError } = useToast()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceMariachiDoge()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          MARIACHI\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Heading>{displayBalance}</Heading>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `${t('Harvested')}!`,\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\n              )\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          {pendingTx ? t('Harvesting') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text, Heading } from 'uikit'\nimport { useLocation } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useUnstakeFarms from 'hooks/useUnstakeFarms'\nimport useStakeFarms from 'hooks/useStakeFarms'\nimport useApproveFarm from 'hooks/useApproveFarm'\nimport { useAppDispatch } from 'state'\nimport { useFarmUser, usePriceMariachiDoge, useLpTokenPrice } from 'state/hooks'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  lpLabel?: string\n  displayApr?: string\n  isTokenOnly?: boolean\n  userData?: any\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  apr,\n  multiplier,\n  lpSymbol,\n  lpLabel,\n  lpAddresses,\n  userDataReady,\n  displayApr,\n  isTokenOnly,\n  userData,\n}) => {\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { stakedBalance, tokenBalance, allowance } = useFarmUser(pid)\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const cakePrice = usePriceMariachiDoge()\n  const isApproved = account && allowance && parseInt(allowance.toString()) > 0\n  \n  const lpAddress = getAddress(lpAddresses)\n\n  const handleStake = async (amount: string, address: string) => {\n    await onStake(amount, address)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(new BigNumber(stakedBalance))\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(new BigNumber(stakedBalance)).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      stakedBalance={new BigNumber(stakedBalance)}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      cakePrice={cakePrice}\n      isTokenOnly={isTokenOnly}\n      referral={userDataReady ? userData.groupInfo : ''}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={new BigNumber(stakedBalance)} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      console.error(e)\n    } finally {\n      setRequestedApproval(false)\n    }\n  }, [onApprove, dispatch, account, pid, t, toastError])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (new BigNumber(stakedBalance).gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Heading>{displayBalance()}</Heading>\n              {new BigNumber(stakedBalance).gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(new BigNumber(stakedBalance)))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake')}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from 'uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBscScanLink } from 'utils'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const lpAddress = getAddress(farm.lpAddresses)\n  const bsc = `https://explorer.dogechain.dog/address/${lpAddress}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 7,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 7,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady, apr, farm, earned, liquidity, multiplier } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isDesktop, isMobile } = useMatchBreakpoints()\n\n  const isSmallerScreen = !isDesktop\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    const data = {\n      liquidity,\n      multiplier,\n      earned,\n      farm,\n      apr,\n      details\n    }\n    if (!isMobile) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...apr} hideButton={isSmallerScreen} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...data[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label=\"EARNED\">\n                <Earned {...earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n  scroll-margin-top: 64px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container id=\"farms-table\">\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem id=\"finished-farms-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React, { useEffect, useCallback, useState, useMemo } from 'react'\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text } from 'uikit'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport { QuoteToken } from 'config/constants/types'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport { useUserFarmStakedOnly } from 'state/user/hooks'\nimport { useFarms, usePriceDogeUSDC, usePriceMariachiDoge } from 'state/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport { DesktopColumnSchema } from './components/types'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst getDisplayApr = (cakeRewardsApr?: number) => {\n  if (cakeRewardsApr) {\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  return null\n}\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceMariachiDoge()\n  const dogePrice = usePriceDogeUSDC()\n  const [query, setQuery] = useState('')\n  const viewMode = ViewMode.TABLE\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 999 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter(\n    (farm) => farm.pid !== 999 && farm.multiplier === '0X' && !isArchivedPid(farm.pid),\n  )\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const userDataReady = !account || activeFarms.length > 0\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        const cakeRewardPerBlock = new BigNumber(farm.mariachiPerBlock || 1)\n          .times(new BigNumber(farm.poolWeight))\n          .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        let apy = cakePrice.times(cakeRewardPerYear)\n\n        let totalValue\n        if (farm.isTokenOnly && farm.tokenAmount) {\n          totalValue = new BigNumber(farm.tokenAmount).times(cakePrice)\n        } else {\n          totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\n\n          if (farm.quoteTokenSymbol === QuoteToken.DOGE) {\n            totalValue = totalValue.times(dogePrice)\n          } else if (farm.quoteTokenSymbol === QuoteToken.MARIACHI) {\n            totalValue = totalValue.times(cakePrice)\n          }\n\n          if (farm.externalPid) {\n            const valuePerLp = totalValue.div(farm.lpInMaster)\n            totalValue = valuePerLp.times(farm.lpInVamp)\n          }\n        }\n\n        if (totalValue.comparedTo(0) > 0) {\n          apy = apy.div(totalValue)\n        }\n\n        return { ...farm, apr: parseFloat(apy.toString()), liquidity: totalValue }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, dogePrice, query],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const chosenFarmsMemoized = useMemo(() => {\n    let chosenFarms = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n    return sortFarms(chosenFarms)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n  ])\n\n  const rowData = chosenFarmsMemoized.map((farm) => {\n    const { tokenAddresses, quoteTokenAdresses } = farm\n    const tokenAddress = tokenAddresses[2000]\n    const quoteTokenAddress = quoteTokenAdresses[2000]\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr),\n        pid: farm.pid,\n        multiplier: farm.multiplier,\n        lpLabel,\n        lpSymbol: farm.lpSymbol,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice: new BigNumber(cakePrice),\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: tokenAddress,\n        quoteToken: quoteTokenAddress,\n        isTokenOnly: farm.isTokenOnly,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n    return (\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr)}\n              cakePrice={new BigNumber(cakePrice)}\n              account={account}\n              removed={false}\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/history`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr)}\n              cakePrice={new BigNumber(cakePrice)}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/archived`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr)}\n              cakePrice={new BigNumber(cakePrice)}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n      </FlexLayout>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n          {t('Farms')}\n        </Heading>\n        <Heading scale=\"lg\" color=\"text\">\n          {t('Stake tokens to earn MARIACHI. ¡Que chingón!')}\n        </Heading>\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleWrapper>\n              <Toggle\n                id=\"staked-only-farms\"\n                checked={stakedOnly}\n                onChange={() => setStakedOnly(!stakedOnly)}\n                scale=\"sm\"\n              />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onOptionChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}