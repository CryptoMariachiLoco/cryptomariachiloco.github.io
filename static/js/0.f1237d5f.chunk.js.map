{"version":3,"sources":["utils/formatBalance.ts","hooks/useContract.ts","components/Balance.tsx","utils/calls/vaults.ts","utils/calls/farms.ts","components/TokenImage/index.tsx","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","components/Layout/Flex.tsx","utils/latinise.ts","components/Select/Select.tsx","hooks/useCallWithGasPrice.ts","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx"],"names":["getBalanceAmount","amount","decimals","BigNumber","dividedBy","BIG_TEN","pow","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","undefined","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatLocalisedCompactNumber","codeFromStorage","getLanguageCodeFromLS","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","useERC20","address","library","useActiveWeb3React","useMemo","getBep20Contract","getSigner","useMasterchef","getMasterchefContract","useVaultContract","getVaultContract","Balance","value","color","isDisabled","unit","prefix","onClick","props","previousValue","useRef","useEffect","current","start","end","suffix","duration","separator","stakeVault","vaultContract","depositAll","tx","wait","receipt","status","unstakeVault","withdrawAll","gasLimit","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","pid","times","DEFAULT_TOKEN_DECIMAL","toString","validAddress","startsWith","length","deposit","unstakeFarm","withdraw","harvestFarm","getImageUrlFromToken","token","TokenPairImage","primaryToken","secondaryToken","isTokenOnly","src","primarySrc","secondarySrc","StyledSpacer","styled","div","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","StyledTokenInput","input","isWarning","shadows","warning","inset","text","StyledInput","Input","mediaQueries","xs","sm","ModalInput","max","symbol","onChange","onSelectMax","inputTitle","t","useTranslation","isBalanceZero","style","position","marginBottom","justifyContent","pl","fontSize","balanceUnits","parseUnits","displayBalance","alignItems","pattern","inputMode","step","min","placeholder","scale","mr","FlexLayout","Latinise","latin_map","τ","Τ","latinise","replace","x","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","Box","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","onOptionChange","defaultOptionIndex","dropdownRef","useState","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","event","stopPropagation","handleClickOutside","document","addEventListener","removeEventListener","label","ref","option","index","selectedIndex","useCallWithGasPrice","gasPrice","useGasPrice","callWithGasPrice","useCallback","contract","methodName","methodArgs","overrides","contractMethod","get","hasManualGasPriceOverride","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","background","gradients","bubblegum","Inner","Container","PageHeader","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","e","target","Wrapper","primary","ExpandableSectionButton","expanded","role","bold"],"mappings":"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","file":"static/js/0.f1237d5f.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBep20Contract, getCakeContract, getMasterchefContract, getCakeVaultContract, getVaultContract } from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useVaultContract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getVaultContract(address, library.getSigner()), [address, library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from 'uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","export const stakeVault = async (vaultContract) => {\r\n  const tx = await vaultContract.depositAll()\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeVault = async (vaultContract) => {\r\n  const tx = await  vaultContract.withdrawAll()\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount, address) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  let validAddress = address\n  if (address === '' || !address.startsWith('0x') || address.length < 42) {\n    validAddress = '0x0000000000000000000000000000000000000000'\n  }\n  const tx = await masterChefContract.deposit(pid, value, validAddress, { ...options })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const tx = await masterChefContract.withdraw(pid, value, { ...options })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const tx = await masterChefContract.deposit(pid, '0', '0x0000000000000000000000000000000000000000', { ...options })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from 'uikit'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: string\n  secondaryToken: string\n  isTokenOnly: boolean\n}\n\nconst getImageUrlFromToken = (token: string) => {\n  return `/images/tokens/${token}.png`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({\n  primaryToken,\n  secondaryToken,\n  isTokenOnly,\n  ...props\n}) => {\n  return isTokenOnly ? (\n    <UIKitTokenImage src={getImageUrlFromToken(primaryToken)} {...props} />\n  ) : (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: string\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Spacer from './Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { formatBigNumber } from 'utils/formatBalance'\n\ninterface ModalInputProps {\n  max?: string\n  symbol?: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  border: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n\n    const balanceUnits = parseUnits(balance, decimals)\n    return formatBigNumber(balanceUnits, decimals, decimals)\n  }\n\n  return (\n    <div style={{ position: 'relative', marginBottom: '10px' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          {max && <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>}\n        </Flex>\n        {max ? (\n          <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n            <StyledInput\n              pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n              inputMode=\"decimal\"\n              step=\"any\"\n              min=\"0\"\n              onChange={onChange}\n              placeholder=\"0\"\n              value={value}\n            />\n            <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n              {t('Max')}\n            </Button>\n            <Text fontSize=\"16px\">{symbol}</Text>\n          </Flex>\n        ) : (\n          <StyledInput inputMode=\"text\" onChange={onChange} placeholder=\"\" value={value} />\n        )}\n      </StyledTokenInput>\n    </div>\n  )\n}\n\nexport default ModalInput\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from 'uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  ...props\n}) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from 'uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from 'uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded = false }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\nexport default ExpandableSectionButton\n"],"sourceRoot":""}