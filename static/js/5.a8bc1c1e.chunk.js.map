{"version":3,"sources":["components/Layout/Flex.tsx","utils/farmHelpers.ts","utils/latinise.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","components/Select/Select.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","components/TokenImage/index.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useActiveWeb3React.ts","hooks/useContract.ts","hooks/useApproveFarm.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","hooks/useCallWithGasPrice.ts","utils/getGasPrice.ts","utils/calls/farms.ts","hooks/useUnstakeFarms.ts","hooks/useStakeFarms.ts","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","utils/compoundApyHelpers.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","hooks/useHarvestFarm.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useDelayedUnmount.ts","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/WithdrawalFee.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/types.ts","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx","utils/formatBalance.ts","components/Balance.tsx"],"names":["FlexLayout","styled","div","isArchivedPid","pid","Latinise","latin_map","τ","Τ","latinise","input","replace","x","Outer","Box","theme","background","colors","gradients","bubblegum","Inner","Container","PageHeader","children","props","StyledInput","Input","InputWrapper","mediaQueries","sm","SearchInput","onChangeCallback","onChange","placeholder","useState","searchText","setSearchText","t","useTranslation","debouncedOnChange","useMemo","debounce","e","value","target","DropDownHeader","shadows","inset","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","options","onOptionChange","defaultOptionIndex","dropdownRef","useRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","event","stopPropagation","useEffect","handleClickOutside","document","addEventListener","removeEventListener","onClick","label","color","ref","map","option","index","selectedIndex","Wrapper","primary","ExpandableSectionButton","expanded","role","bold","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","totalValueFormatted","swap","liquidityUrl","justifyContent","width","height","href","getImageUrlFromToken","token","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","Flex","MultiplierTag","Tag","CardHeading","lpLabel","multiplier","quoteToken","alignItems","mb","variant","flexDirection","split","ml","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","simpleRpcProvider","provider","setProvider","current","parseInt","process","useERC20","address","getBep20Contract","getSigner","useMasterchef","getMasterchefContract","EditingCurrency","CalculatorMode","useApproveFarm","lpContract","masterChefContract","callWithGasPrice","gasPrice","useGasPrice","useCallback","contract","methodName","a","methodArgs","overrides","contractMethod","get","hasManualGasPriceOverride","tx","useCallWithGasPrice","onApprove","ethers","constants","MaxUint256","wait","receipt","status","getGasPrice","store","getState","user","GAS_PRICE_GWEI","default","gasLimit","DEFAULT_GAS_LIMIT","stakeFarm","amount","bandAddress","BigNumber","times","DEFAULT_TOKEN_DECIMAL","toString","deposit","unstakeFarm","withdraw","harvestFarm","useUnstakeFarms","onUnstake","useStakeFarms","onStake","account","txHash","console","info","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","React","Children","toArray","length","child","i","StyledTokenInput","isWarning","warning","text","xs","StyledErrorMessage","Text","ModalInput","max","symbol","onSelectMax","addLiquidityUrl","inputTitle","decimals","isBalanceZero","style","position","pl","fontSize","balance","balanceUnits","parseUnits","formatBigNumber","displayBalance","pattern","inputMode","step","min","scale","mr","external","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","apr","earningTokenPrice","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","roundingDecimalsNew","Math","round","days","daysAsDecimalOfYear","principal","interestEarned","parseFloat","toFixed","getApy","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","Footer","BulletList","textSubtle","RoiCalculatorFooter","isFarm","displayApr","autoCompoundFrequency","linkLabel","linkHref","isExpanded","setIsExpanded","useTooltip","my","placement","tooltipOffset","multiplierRef","targetRef","multiplierTooltip","multiplierTooltipVisible","tooltipVisible","gridRowCount","apy","p","prev","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","display","mt","fee","compoundingIndexToFrequency","initialState","controls","compounding","compoundingFrequency","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","data","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","state","action","type","payload","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","stakingTokenPrice","useReducer","dispatch","principalInUSDAsNumber","interestBreakdown","hasInterest","Number","isNaN","roiAsUSD","principalForExpectedRoi","interest","getPrincipalForInterest","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","gt","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","toNumber","MILLION","RoiCardWrapper","radii","RoiCardInner","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","fadeOut","RoiCard","earningTokenSymbol","calculatorState","expectedRoi","setExpectedRoi","inputRef","focus","onEnterEditing","toLocaleString","minimumFractionDigits","maximumFractionDigits","textTransform","currentTarget","validity","valid","roiAsString","rotate","keyframes","ArrowContainer","AnimatedArrow","key","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenBalance","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","onUserInput","title","headerBackground","asset","currencyValue","innerRef","unit","switchEditingUnits","onFocus","lte","getBalanceNumber","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","AnnualRoiContainer","AnnualRoiDisplay","DepositModal","stakedBalance","onConfirm","tokenName","lpPrice","cakePrice","val","setVal","useToast","toastSuccess","toastError","pendingTx","setPendingTx","showRoiCalculator","setShowRoiCalculator","fullBalance","getFullDisplayBalance","lpTokensToStake","fullBalanceNumber","usdToStake","annualRoi","formattedAnnualRoi","formatNumber","handleChange","handleSelectMax","plus","isFinite","eq","error","alignSelf","WithdrawModal","valNumber","IconButtonWrapper","StakeAction","tokenBalance","location","useLocation","useAppDispatch","useLpTokenPrice","handleStake","fetchFarmUserDataAsync","pids","handleUnstake","stakedBalanceBigNumber","getBalanceAmount","lt","ROUND_DOWN","useModal","onPresentDeposit","onPresentWithdraw","Balance","prefix","some","item","pathname","includes","useHarvestFarm","farmPid","onReward","HarvestAction","earnings","usePriceMariachiCro","rawEarningsBalance","BIG_ZERO","earningsBusd","multipliedBy","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","lpAddress","getAddress","isApproved","handleApprove","pr","lpSymbol","ConnectWalletButton","ApyLabelContainer","ApyButton","useFarmUser","onPresentApyModal","StyledCard","Card","FarmCardInnerContainer","ExpandingWrapper","cardBorder","FarmCard","removed","showExpandableSection","setShowExpandableSection","liquidity","isGreaterThanOrEqualTo","undefined","toUpperCase","isPromotedFarm","tokenSymbol","isActive","tokenAddresses","isTokenOnly","quoteTokenAdresses","CardActionsContainer","getBscScanLink","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","AprWrapper","Apr","originalValue","hideButton","TokenWrapper","Farm","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isDesktop","useMatchBreakpoints","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","WithdrawalFeeWrapper","WithdrawalFee","withdrawalFees","displayWithdrawalFee","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","ActionContent","earningsBigNumber","isZero","Staked","marginBottom","marginTop","expandAnimation","collapseAnimation","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","withdrawalFee","bsc","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isMobile","isSmallerScreen","tableSchema","columnNames","column","Object","keys","columnIndex","indexOf","createElement","handleRenderRow","colSpan","card","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","hasStakeInFinishedFarms","url","useRouteMatch","as","Link","to","show","ToggleView","viewMode","onToggle","handleToggle","ViewMode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","Image","getDisplayApr","cakeRewardsApr","Farms","pools","path","farmsLP","useFarms","croPrice","usePriceCroUSDC","query","setQuery","useUserFarmsViewMode","setViewMode","sortOption","setSortOption","fastRefresh","useRefresh","isArchived","isInactive","useUserFarmStakedOnly","stakedOnly","setStakedOnly","activeFarms","filter","activePools","inactiveFarms","archivedFarms","stakedOnlyFarms","isGreaterThan","stakedOnlyPools","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","totalValue","cakeRewardPerYear","mariachiPerBlock","poolWeight","pow","BLOCKS_PER_YEAR","tokenAmount","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","CRO","MARIACHI","totalSupply","lpTotalSupply","valuePerLp","totalBalance","lpInVamp","comparedTo","lowercaseQuery","chosenFarmsMemoized","chosenFarms","farms","orderBy","slice","sortFarms","rowData","tokenAddress","quoteTokenAddress","Page","marginLeft","sort","b","exact","renderContent","alt","dividedBy","BIG_TEN","displayDecimals","number","minPrecision","maxPrecision","remainder","mod","from","formatUnits","sub","formatLocalisedCompactNumber","codeFromStorage","getLanguageCodeFromLS","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","isDisabled","previousValue","start","end","suffix","duration","separator"],"mappings":"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","file":"static/js/5.a8bc1c1e.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from 'uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from 'uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from 'uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  ...props\n}) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded = false }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\nexport default ExpandableSectionButton\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton } from 'uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  swap?: string\n  totalValueFormatted?: string\n  liquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  totalValueFormatted,\n  swap,\n  liquidityUrl\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {swap ? <Text>LP from: {swap}</Text> : <></>}\n      <StyledLinkExternal href={liquidityUrl}>Get LPs</StyledLinkExternal>\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from 'uikit'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: string\n  secondaryToken: string\n}\n\nconst getImageUrlFromToken = (token: string) => {\n  return `/images/tokens/${token}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: string\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Skeleton } from 'uikit'\nimport { TokenImage, TokenPairImage } from 'components/TokenImage'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  token: string\n  quoteToken: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, token, quoteToken }) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      {quoteToken ? (\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\n      ) : (\n        <TokenImage token={token} width={64} height={64} />\n      )}\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {multiplier ? (\n            <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n          ) : (\n            <Skeleton ml=\"4px\" width={42} height={28} />\n          )}\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBep20Contract, getCakeContract, getMasterchefContract, getCakeVaultContract } from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import { useCallback } from 'react'\nimport { ethers, Contract } from 'ethers'\nimport { useMasterchef } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\nconst useApproveFarm = (lpContract: Contract) => {\n  const masterChefContract = useMasterchef()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const handleApprove = useCallback(async () => {\n    const tx = await callWithGasPrice(lpContract, 'approve', [masterChefContract.address, ethers.constants.MaxUint256])\n    const receipt = await tx.wait()\n    return receipt.status\n  }, [lpContract, masterChefContract, callWithGasPrice])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveFarm\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: +amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\nconst getGasPrice = (): string => {\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return userGas\n}\n\nexport default getGasPrice\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount, bandAddress) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const tx = await masterChefContract.deposit(pid, value, bandAddress, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  const tx = await masterChefContract.deposit(pid, '0', '0x0000', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import { useCallback } from 'react'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useUnstakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await unstakeFarm(masterChefContract, pid, amount)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakeFarms\n","import { useCallback } from 'react'\nimport { stakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useStakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string, account: string) => {\n      const txHash = await stakeFarm(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakeFarms\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Spacer from './Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { formatBigNumber } from 'utils/formatBalance'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  border: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n\n    const balanceUnits = parseUnits(balance, decimals)\n    return formatBigNumber(balanceUnits, decimals, decimals)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of MARIACHI rewards each farm receives, as a proportion of the MARIACHI produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 MARIACHI per block, a 40x farm would receive 40 MARIACHI per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (MARIACHI yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const [expectedRoi, setExpectedRoi] = useState('')\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n    setExpectedRoi(\n      roiUSD.toLocaleString('en', {\n        minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n        maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n      }),\n    )\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.validity.valid) {\n      const roiAsString = event.target.value.replace(/,/g, '.')\n      setTargetRoi(roiAsString)\n      setExpectedRoi(roiAsString)\n    }\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"^[0-9]+[.,]?[0-9]*$\"\n                  scale=\"sm\"\n                  value={expectedRoi}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from 'uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from 'uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'MARIACHI',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Button, Modal, LinkExternal, CalculateIcon, IconButton } from 'uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, formatNumber } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\ninterface DepositModalProps {\n  max: BigNumber\n  stakedBalance: BigNumber\n  multiplier?: string\n  lpPrice: BigNumber\n  lpLabel?: string\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  stakedBalance,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  multiplier,\n  displayApr,\n  lpPrice,\n  lpLabel,\n  apr,\n  addLiquidityUrl,\n  cakePrice,\n}) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const lpTokensToStake = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const usdToStake = lpTokensToStake.times(lpPrice)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !lpTokensToStake.isNaN() ? usdToStake.toNumber() : 0,\n    apr,\n    earningTokenPrice: cakePrice.toNumber(),\n  })\n\n  const annualRoi = cakePrice.times(interestBreakdown[3])\n  const formattedAnnualRoi = formatNumber(\n    annualRoi.toNumber(),\n    annualRoi.gt(10000) ? 0 : 2,\n    annualRoi.gt(10000) ? 0 : 2,\n  )\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n        stakingTokenBalance={stakedBalance.plus(max)}\n        stakingTokenSymbol={tokenName}\n        stakingTokenPrice={lpPrice.toNumber()}\n        earningTokenPrice={cakePrice.toNumber()}\n        apr={apr}\n        multiplier={multiplier}\n        displayApr={displayApr}\n        linkHref={addLiquidityUrl}\n        isFarm\n        initialValue={val}\n        onBack={() => setShowRoiCalculator(false)}\n      />\n    )\n  }\n\n  return (\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Text mr=\"8px\" color=\"textSubtle\">\n          {t('Annual ROI at current rates')}:\n        </Text>\n        <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n          <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </AnnualRoiContainer>\n      </Flex>\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={\n            pendingTx || !lpTokensToStake.isFinite() || lpTokensToStake.eq(0) || lpTokensToStake.gt(fullBalanceNumber)\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Staked!'), t('Your funds have been staked in the farm'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get %symbol%', { symbol: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from 'uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/hooks'\nimport { getBalanceAmount, getBalanceNumber } from 'utils/formatBalance'\nimport useUnstakeFarms from 'hooks/useUnstakeFarms'\nimport useStakeFarms from 'hooks/useStakeFarms'\nimport { useAppDispatch } from 'state'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  multiplier?: string\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  lpLabel?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  multiplier,\n  apr,\n  displayApr,\n  addLiquidityUrl,\n  cakePrice,\n  lpLabel,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount, account)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return '<0.0000001'\n    }\n    if (stakedBalanceBigNumber.gt(0)) {\n      return stakedBalanceBigNumber.toFixed(8, BigNumber.ROUND_DOWN)\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      multiplier={multiplier}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            decimals={2}\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n        )}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { harvestFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useHarvestFarm = (farmPid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    await harvestFarm(masterChefContract, farmPid)\n  }, [farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport useToast from 'hooks/useToast'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePriceMariachiCro } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport useHarvestFarm from 'hooks/useHarvestFarm'\nimport { useAppDispatch } from 'state'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const cakePrice = usePriceMariachiCro()\n  const dispatch = useAppDispatch()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          try {\n            await onReward()\n            toastSuccess(\n              `${t('Harvested')}!`,\n              t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'MARIACHI' }),\n            )\n          } catch (e) {\n            toastError(\n              t('Error'),\n              t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n            )\n            console.error(e)\n          } finally {\n            setPendingTx(false)\n          }\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n        }}\n      >\n        {pendingTx ? t('Harvesting') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Text } from 'uikit'\nimport useApproveFarm from 'hooks/useApproveFarm'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { useERC20 } from 'hooks/useContract'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  lpLabel?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, cakePrice, lpLabel }) => {\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const { allowance, tokenBalance, stakedBalance, earnings } = farm.userData || {}\n  const lpAddress = getAddress(lpAddresses)\n  const isApproved = account && allowance && parseInt(allowance.toString()) > 0\n  const dispatch = useAppDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      console.error(e)\n    } finally {\n      setRequestedApproval(false)\n    }\n  }, [onApprove, dispatch, account, pid, t, toastError])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={new BigNumber(stakedBalance)}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        apr={farm.apr}\n        lpLabel={lpLabel}\n        cakePrice={cakePrice}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          MARIACHI\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {farm.lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Flex, IconButton, useModal, CalculateIcon } from 'uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFarmUser, useLpTokenPrice } from 'state/hooks'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nexport interface ApyButtonProps {\n  variant: 'text' | 'text-and-button'\n  pid: number\n  lpSymbol: string\n  lpLabel?: string\n  multiplier: string\n  cakePrice?: BigNumber\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  variant,\n  pid,\n  lpLabel,\n  lpSymbol,\n  cakePrice,\n  apr,\n  multiplier,\n  displayApr,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const { tokenBalance, stakedBalance } = useFarmUser(pid)\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      stakingTokenBalance={stakedBalance.plus(tokenBalance)}\n      stakingTokenSymbol={lpSymbol}\n      stakingTokenPrice={parseFloat(lpPrice.toString())}\n      earningTokenPrice={parseFloat(cakePrice.toString())}\n      apr={apr}\n      multiplier={multiplier}\n      displayApr={displayApr}\n      linkHref={addLiquidityUrl}\n      isFarm\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <ApyLabelContainer alignItems=\"center\" onClick={handleClickButton}>\n      {displayApr}%\n      {variant === 'text-and-button' && (\n        <IconButton variant=\"text\" scale=\"sm\" ml=\"4px\">\n          <CalculateIcon width=\"18px\" />\n        </IconButton>\n      )}\n    </ApyLabelContainer>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Card, Flex, Text, Skeleton } from 'uikit'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { Farm } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  liquidity?: BigNumber\n}\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.isGreaterThanOrEqualTo(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.tokenSymbol === 'CAKE'\n\n  return (\n    <StyledCard isActive={isPromotedFarm}>\n      <FarmCardInnerContainer>\n        <CardHeading\n          lpLabel={lpLabel}\n          multiplier={farm.multiplier}\n          token={farm.tokenAddresses[25]}\n          quoteToken={farm.isTokenOnly ? null : farm.quoteTokenAdresses[25]}\n        />\n        {!removed && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text>{t('APR')}:</Text>\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n              {farm.apr ? (\n                <ApyButton\n                  variant=\"text-and-button\"\n                  pid={farm.pid}\n                  lpSymbol={farm.lpSymbol}\n                  multiplier={farm.multiplier}\n                  lpLabel={lpLabel}\n                  cakePrice={cakePrice}\n                  apr={farm.apr}\n                  displayApr={displayApr}\n                />\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Earn')}:</Text>\n          <Text bold>MARIACHI</Text>\n        </Flex>\n        <CardActionsContainer farm={farm} lpLabel={lpLabel} account={account} cakePrice={cakePrice} />\n      </FarmCardInnerContainer>\n\n      <ExpandingWrapper>\n        <ExpandableSectionButton\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\n          expanded={showExpandableSection}\n        />\n        {showExpandableSection && (\n          <DetailsSection\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\n            totalValueFormatted={totalValueFormatted}\n            swap={farm.swap}\n            liquidityUrl={farm.liquidityUrl}\n          />\n        )}\n      </ExpandingWrapper>\n    </StyledCard>\n  )\n}\n\nexport default FarmCard\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport BigNumber from 'bignumber.js'\nimport { Skeleton } from 'uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  pid: number\n  lpLabel: string\n  lpSymbol: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  pid,\n  lpLabel,\n  lpSymbol,\n  multiplier,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <ApyButton\n          variant={hideButton ? 'text' : 'text-and-button'}\n          pid={pid}\n          lpSymbol={lpSymbol}\n          lpLabel={lpLabel}\n          multiplier={multiplier}\n          cakePrice={cakePrice}\n          apr={originalValue}\n          displayApr={value}\n        />\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from 'uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { TokenPairImage, TokenImage } from 'components/TokenImage'\nimport { useFarmUser } from 'state/hooks'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: string\n  quoteToken: string\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        {quoteToken ? (\n          <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\n        ) : (\n          <TokenImage token={token} width={64} height={64} />\n        )}\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from 'uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isDesktop } = useMatchBreakpoints()\n\n  return (\n    <Container>\n      {!isDesktop && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of MARIACHI rewards each farm receives, as a proportion of the MARIACHI produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 MARIACHI per block, a 40x farm would receive 40 MARIACHI per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from 'uikit'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface WithdrawalFeeProps {\n  withdrawalFees: number\n}\n\nconst WithdrawalFeeWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst WithdrawalFee: React.FunctionComponent<WithdrawalFeeProps> = ({ withdrawalFees }) => {\n  const displayWithdrawalFee = withdrawalFees >= 0 ? `${withdrawalFees / 100}%` : <Skeleton width={30} />\n  const tooltipContent = (\n    <>\n      <Text>\n        Withdrawal fees reduce over time at a fixed rate. This ensures the longevity of the project, and buybacks for\n        Mariachi.\n      </Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <WithdrawalFeeWrapper>{displayWithdrawalFee}</WithdrawalFeeWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default WithdrawalFee\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Skeleton } from 'uikit'\nimport BigNumber from 'bignumber.js'\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.isGreaterThanOrEqualTo(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useState } from 'react'\nimport { Button, Heading, Skeleton, Text } from 'uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceMariachiCro } from 'state/hooks'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport useHarvestFarm from 'hooks/useHarvestFarm'\nimport { useAppDispatch } from 'state'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const { toastSuccess, toastError } = useToast()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceMariachiCro()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          MARIACHI\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Heading>{displayBalance}</Heading>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `${t('Harvested')}!`,\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\n              )\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          {pendingTx ? t('Harvesting') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text, Heading } from 'uikit'\nimport { useLocation } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useUnstakeFarms from 'hooks/useUnstakeFarms'\nimport useStakeFarms from 'hooks/useStakeFarms'\nimport useApproveFarm from 'hooks/useApproveFarm'\nimport { useAppDispatch } from 'state'\nimport { useFarmUser, usePriceMariachiCro, useLpTokenPrice } from 'state/hooks'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  lpLabel?: string\n  displayApr?: string\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  apr,\n  multiplier,\n  lpSymbol,\n  lpLabel,\n  lpAddresses,\n  userDataReady,\n  displayApr,\n}) => {\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { stakedBalance, tokenBalance, allowance } = useFarmUser(pid)\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const cakePrice = usePriceMariachiCro()\n\n  const isApproved = account && allowance && parseInt(allowance.toString()) > 0\n\n  const lpAddress = getAddress(lpAddresses)\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount, account)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(new BigNumber(stakedBalance))\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(new BigNumber(stakedBalance)).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      stakedBalance={new BigNumber(stakedBalance)}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      cakePrice={cakePrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={new BigNumber(stakedBalance)} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      console.error(e)\n    } finally {\n      setRequestedApproval(false)\n    }\n  }, [onApprove, dispatch, account, pid, t, toastError])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (new BigNumber(stakedBalance).gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Heading>{displayBalance()}</Heading>\n              {new BigNumber(stakedBalance).gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(new BigNumber(stakedBalance)))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake')}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from 'uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBscScanLink } from 'utils'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\nimport WithdrawalFee, { WithdrawalFeeProps } from '../WithdrawalFee'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  withdrawalFee: WithdrawalFeeProps\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  withdrawalFee,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const lpAddress = getAddress(farm.lpAddresses)\n  const bsc = getBscScanLink(lpAddress, 'address')\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {farm.pid !== 0 ? <Text>LP from: {farm.swap}</Text> : <></>}\n        <StyledLinkExternal href={farm.liquidityUrl}>Get LPs</StyledLinkExternal>\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>Withdrawal Fee</Text>\n          <WithdrawalFee {...withdrawalFee} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'withdrawalFee',\n    sortable: true,\n    label: 'Withdrawal Fee',\n  },\n  {\n    id: 7,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'withdrawalFee',\n    sortable: true,\n    label: 'Withdrawal Fee',\n  },\n  {\n    id: 7,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport WithdrawalFee, { WithdrawalFeeProps } from './WithdrawalFee'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  withdrawalFee: WithdrawalFeeProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  withdrawalFee: WithdrawalFee,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady, apr, farm, earned, withdrawalFee, liquidity, multiplier } = props\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(false)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  const { isDesktop, isMobile } = useMatchBreakpoints()\n\n  const isSmallerScreen = !isDesktop\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    const data = {\n      liquidity,\n      multiplier,\n      withdrawalFee,\n      earned,\n      farm,\n      apr,\n      details\n    }\n    \n    if (!isMobile) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...apr} hideButton={isSmallerScreen} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...data[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label=\"EARNED\">\n                <Earned {...earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n  scroll-margin-top: 64px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n\n  return (\n    <Container id=\"farms-table\">\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem id=\"finished-farms-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from 'uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useEffect, useCallback, useState, useMemo } from 'react'\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text } from 'uikit'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport { QuoteToken } from 'config/constants/types'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport { useUserFarmStakedOnly, useUserFarmsViewMode } from 'state/user/hooks'\nimport { useFarms, usePriceCroUSDC, usePriceMariachiCro } from 'state/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema } from './components/types'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst getDisplayApr = (cakeRewardsApr?: number) => {\n  if (cakeRewardsApr) {\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  return null\n}\n\nconst Farms: React.FC<any> = ({ pools }) => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceMariachiCro()\n  const croPrice = usePriceCroUSDC()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = useUserFarmsViewMode()\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n\n  const activeFarms = farmsLP.filter(\n    (farm) => farm.pid !== 999 && farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid),\n  )\n  const activePools = farmsLP.filter((farm) => farm.pid === 0)\n  const inactiveFarms = farmsLP.filter(\n    (farm) => farm.pid !== 999 && farm.multiplier === '0X' && !isArchivedPid(farm.pid),\n  )\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const userDataReady = !account || activeFarms.length > 0\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedOnlyPools = activePools.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        const cakeRewardPerBlock = new BigNumber(farm.mariachiPerBlock || 1)\n          .times(new BigNumber(farm.poolWeight))\n          .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        let apy = cakePrice.times(cakeRewardPerYear)\n        let totalValue\n        if (farm.isTokenOnly && farm.tokenAmount) {\n          totalValue = new BigNumber(farm.tokenAmount).times(cakePrice)\n        } else {\n          totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\n\n          if (farm.quoteTokenSymbol === QuoteToken.CRO) {\n            totalValue = totalValue.times(croPrice)\n          } else if (farm.quoteTokenSymbol === QuoteToken.MARIACHI) {\n            totalValue = totalValue.times(cakePrice)\n          }\n\n          const totalSupply = new BigNumber(farm.lpTotalSupply).div(new BigNumber(10).pow(18))\n          const valuePerLp = totalValue.div(totalSupply)\n\n          const totalBalance = new BigNumber(farm.lpInVamp).plus(new BigNumber(farm.tokenAmount));\n          totalValue = valuePerLp.times(totalBalance)\n        }\n\n        if (totalValue.comparedTo(0) > 0) {\n          apy = apy.div(totalValue)\n        }\n\n        return { ...farm, apr: parseFloat(apy.toString()), liquidity: totalValue }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, croPrice, query],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const chosenFarmsMemoized = useMemo(() => {\n    let chosenFarms = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      if (pools) {\n        chosenFarms = stakedOnly ? farmsList(stakedOnlyPools) : farmsList(activePools)\n      } else {\n        chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n      }\n    }\n    if (isInactive) {\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n    return sortFarms(chosenFarms)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    activePools,\n    stakedOnlyPools,\n    pools,\n  ])\n\n  const rowData = chosenFarmsMemoized.map((farm) => {\n    const { tokenAddresses, quoteTokenAdresses } = farm\n    const tokenAddress = tokenAddresses[25]\n    const quoteTokenAddress = quoteTokenAdresses[25]\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr),\n        pid: farm.pid,\n        multiplier: farm.multiplier,\n        lpLabel,\n        lpSymbol: farm.lpSymbol,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice: new BigNumber(cakePrice),\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: tokenAddress,\n        quoteToken: farm.isTokenOnly ?  '' : quoteTokenAddress,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      withdrawalFee: {\n        withdrawalFees: farm.userData.withdrawalFee ? parseInt(farm.userData.withdrawalFee.toString()) : 0,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n    return (\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr)}\n              cakePrice={new BigNumber(cakePrice)}\n              account={account}\n              removed={false}\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/history`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr)}\n              cakePrice={new BigNumber(cakePrice)}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/archived`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr)}\n              cakePrice={new BigNumber(cakePrice)}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n      </FlexLayout>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n          {t('Farms')}\n        </Heading>\n        <Heading scale=\"lg\" color=\"text\">\n          {t('Stake LP tokens to earn MARIACHI. ¡Que chingón!')}\n        </Heading>\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle\n                id=\"staked-only-farms\"\n                checked={stakedOnly}\n                onChange={() => setStakedOnly(!stakedOnly)}\n                scale=\"sm\"\n              />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            {!pools && <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />}\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onOptionChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from 'uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n"],"sourceRoot":""}